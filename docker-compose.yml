version: "3.7"

services:
  web:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
#    restart: always
    env_file:
      - ./src/server/.env
    volumes:
      - static_volume:/app/src/server/static/

  postgres:
    image: postgres:latest
#    restart: always
    env_file:
      - ./docker-compose.env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

#  celery:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: celery -A stroyinvest worker -l info
#    env_file:
#      - .env
#    depends_on:
#      - postgres
#      - redis
#      - web

  nginx:
    build:
      context: .
      dockerfile: ./deploy/nginx/Dockerfile.nginx
    command: nginx -g 'daemon off;'
#    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/src/server/static/
    depends_on:
      - web

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin4_container
#    env_file:
#      - ./docker-compose.env
#    restart: always
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin

volumes:
  pg_data:
  static_volume:
#  pgadmin-data: